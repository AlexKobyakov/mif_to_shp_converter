# -*- coding: utf-8 -*-
"""
MIF/TAB to SHP/GeoJSON Converter Plugin for QGIS
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –ø–ª–∞–≥–∏–Ω–∞ —Å –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π

Author: –ö–æ–±—è–∫–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á (Alex Kobyakov)
Email: kobyakov@lesburo.ru
Year: 2025
"""

import os
import configparser

from qgis.PyQt.QtCore import QSettings, QTranslator, QCoreApplication
from qgis.PyQt.QtGui import QIcon
from qgis.PyQt.QtWidgets import QAction

from qgis.core import QgsApplication
from qgis.utils import iface

from .translation_manager import translations
from .gui import MifToShpDialog


class MifToShpConverter:
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –ø–ª–∞–≥–∏–Ω–∞ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞ MIF/TAB –≤ SHP/GeoJSON"""

    def __init__(self, iface):
        """–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–ª–∞–≥–∏–Ω–∞"""
        self.iface = iface
        self.plugin_dir = os.path.dirname(__file__)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤
        self.translator = None
        self.initTranslator()
        
        # –î–µ–π—Å—Ç–≤–∏–µ –ø–ª–∞–≥–∏–Ω–∞
        self.action = None
        self.menu = 'MIF/TAB Converter'
        
        # –î–∏–∞–ª–æ–≥
        self.dialog = None
    
    @staticmethod
    def get_plugin_version():
        """–ß—Ç–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –ø–ª–∞–≥–∏–Ω–∞ –∏–∑ metadata.txt"""
        try:
            plugin_dir = os.path.dirname(__file__)
            metadata_file = os.path.join(plugin_dir, 'metadata.txt')
            
            if os.path.exists(metadata_file):
                config = configparser.ConfigParser()
                config.read(metadata_file, encoding='utf-8')
                
                if 'general' in config and 'version' in config['general']:
                    return config['general']['version']
            
            return "Unknown"
        except Exception as e:
            print(f"Error reading plugin version: {e}")
            return "Unknown"
    
    @staticmethod
    def get_plugin_info():
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞–≥–∏–Ω–µ –∏–∑ metadata.txt"""
        try:
            plugin_dir = os.path.dirname(__file__)
            metadata_file = os.path.join(plugin_dir, 'metadata.txt')
            
            if os.path.exists(metadata_file):
                config = configparser.ConfigParser()
                config.read(metadata_file, encoding='utf-8')
                
                if 'general' in config:
                    return {
                        'name': config['general'].get('name', 'MIF/TAB to SHP/GeoJSON Converter'),
                        'version': config['general'].get('version', 'Unknown'),
                        'author': config['general'].get('author', 'Unknown'),
                        'email': config['general'].get('email', ''),
                        'description': config['general'].get('description', '')
                    }
            
            return {
                'name': 'MIF/TAB to SHP/GeoJSON Converter',
                'version': 'Unknown',
                'author': 'Unknown',
                'email': '',
                'description': ''
            }
        except Exception as e:
            print(f"Error reading plugin info: {e}")
            return {
                'name': 'MIF/TAB to SHP/GeoJSON Converter',
                'version': 'Unknown',
                'author': 'Unknown',
                'email': '',
                'description': ''
            }

    def initTranslator(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤"""
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ —Å–∏—Å—Ç–µ–º—ã
        locale = QSettings().value('locale/userLocale')[0:2]
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —è–∑—ã–∫–∞ –≤ translations
        translations.set_language(locale)
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞ Qt
        locale_path = os.path.join(
            self.plugin_dir,
            'i18n',
            f'MifToShpConverter_{locale}.qm'
        )

        if os.path.exists(locale_path):
            self.translator = QTranslator()
            self.translator.load(locale_path)
            QCoreApplication.installTranslator(self.translator)

    def initGui(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ GUI –ø–ª–∞–≥–∏–Ω–∞"""
        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
        icon_path = os.path.join(self.plugin_dir, 'icon.png')
        self.action = QAction(
            QIcon(icon_path),
            'üéØ MIF/TAB to SHP/GeoJSON Converter',
            self.iface.mainWindow()
        )
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
        self.action.triggered.connect(self.run)
        self.action.setEnabled(True)
        self.action.setToolTip(translations.get_text('window_title'))
        self.action.setStatusTip(translations.get_text('window_title'))

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –º–µ–Ω—é –∏ –ø–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        self.iface.addToolBarIcon(self.action)
        self.iface.addPluginToVectorMenu(self.menu, self.action)

    def unload(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞"""
        # –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –º–µ–Ω—é –∏ –ø–∞–Ω–µ–ª–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        self.iface.removePluginVectorMenu(self.menu, self.action)
        self.iface.removeToolBarIcon(self.action)
        
        # –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞
        if self.translator:
            QCoreApplication.removeTranslator(self.translator)

    def run(self):
        """–ó–∞–ø—É—Å–∫ –ø–ª–∞–≥–∏–Ω–∞"""
        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
        if self.dialog is None:
            self.dialog = MifToShpDialog()
        
        # –ü–æ–∫–∞–∑ –¥–∏–∞–ª–æ–≥–∞
        result = self.dialog.exec_()
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
        if result:
            pass  # –î–∏–∞–ª–æ–≥ –±—ã–ª –ø—Ä–∏–Ω—è—Ç
