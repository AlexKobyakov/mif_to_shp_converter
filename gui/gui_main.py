# -*- coding: utf-8 -*-
"""
Main GUI Dialog
–ì–ª–∞–≤–Ω–æ–µ –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞

Author: –ö–æ–±—è–∫–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á (Alex Kobyakov)
Email: kobyakov@lesburo.ru
Year: 2025
"""

from datetime import datetime

from qgis.PyQt.QtCore import Qt
from qgis.PyQt.QtWidgets import (
    QDialog, QVBoxLayout, QHBoxLayout, QSplitter, 
    QScrollArea, QWidget, QTabWidget, QFrame, QLabel
)

from .gui_components import ModernProgressBar, apply_global_styles
from .gui_widgets import (
    HeaderWidget, ConversionModeWidget, InputDataWidget, 
    OutputDataWidget, ProcessingOptionsWidget, ResultsTableWidget,
    LogTextWidget, ControlButtonsWidget
)
from .gui_handlers import GuiEventHandlers


class MifToShpDialog(QDialog):
    """–ì–ª–∞–≤–Ω–æ–µ –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞ —Å –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        self.worker = None
        self.worker_thread = None
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫–Ω–∞
        self.setupWindow()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.setupUi()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
        self.handlers = GuiEventHandlers(self)
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤
        self.connectSignals()
        
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π
        self.applyStyles()
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞
        self.updateLanguage()
    
    def setupWindow(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–∫–Ω–∞"""
        from ..translation_manager import translations
        
        self.setWindowTitle(f"üéØ {translations.get_text('window_title')}")
        self.setMinimumSize(1000, 750)  # –£–≤–µ–ª–∏—á–µ–Ω –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä
        self.resize(1200, 850)  # –£–≤–µ–ª–∏—á–µ–Ω —Ä–∞–∑–º–µ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫–Ω–∞
        self.setWindowFlags(Qt.Dialog | Qt.WindowTitleHint | Qt.WindowCloseButtonHint)
    
    def setupUi(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –ì–ª–∞–≤–Ω—ã–π –º–∞–∫–µ—Ç
        main_layout = QVBoxLayout(self)
        main_layout.setContentsMargins(15, 15, 15, 15)  # –£–≤–µ–ª–∏—á–µ–Ω—ã –æ—Ç—Å—Ç—É–ø—ã
        main_layout.setSpacing(15)  # –£–≤–µ–ª–∏—á–µ–Ω–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        self.createHeader()
        self.createMainContent()
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –≥–ª–∞–≤–Ω—ã–π –º–∞–∫–µ—Ç
        main_layout.addWidget(self.header)
        main_layout.addWidget(self.main_splitter, 1)
    
    def createHeader(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
        self.header = HeaderWidget()
    
    def createMainContent(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ"""
        # –ì–ª–∞–≤–Ω—ã–π —Å–ø–ª–∏—Ç—Ç–µ—Ä
        self.main_splitter = QSplitter(Qt.Vertical)
        self.main_splitter.setChildrenCollapsible(False)
        
        # –í–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.createSettingsArea()
        
        # –ù–∏–∂–Ω—è—è —á–∞—Å—Ç—å - –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        self.createResultsArea()
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–ø–ª–∏—Ç—Ç–µ—Ä
        self.main_splitter.addWidget(self.settings_area)
        self.main_splitter.addWidget(self.results_area)
        self.main_splitter.setSizes([500, 250])  # –ë–æ–ª—å—à–µ –º–µ—Å—Ç–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    
    def createSettingsArea(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ–±–ª–∞—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º–∞—è –æ–±–ª–∞—Å—Ç—å
        self.settings_scroll = QScrollArea()
        self.settings_scroll.setWidgetResizable(True)
        self.settings_scroll.setVerticalScrollBarPolicy(Qt.ScrollBarAsNeeded)
        self.settings_scroll.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)
        
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞—Å—Ç—Ä–æ–µ–∫
        settings_container = QWidget()
        settings_layout = QVBoxLayout(settings_container)
        settings_layout.setContentsMargins(15, 15, 15, 15)  # –£–≤–µ–ª–∏—á–µ–Ω—ã –æ—Ç—Å—Ç—É–ø—ã
        settings_layout.setSpacing(20)  # –£–≤–µ–ª–∏—á–µ–Ω–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        self.createSettingsTabs()
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.control_buttons = ControlButtonsWidget()
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –º–∞–∫–µ—Ç
        settings_layout.addWidget(self.settings_tabs)
        settings_layout.addWidget(self.control_buttons)
        settings_layout.addStretch()
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∏–¥–∂–µ—Ç–∞ –≤ scroll area
        self.settings_scroll.setWidget(settings_container)
        self.settings_area = self.settings_scroll
    
    def createSettingsTabs(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        self.settings_tabs = QTabWidget()
        self.settings_tabs.setStyleSheet("""
            QTabWidget::pane {
                border: 2px solid #bdc3c7;
                border-radius: 8px;
                background-color: #f8f9fa;
            }
            QTabBar::tab {
                background: #ecf0f1;
                border: 1px solid #bdc3c7;
                padding: 8px 16px;
                margin-right: 2px;
                border-top-left-radius: 6px;
                border-top-right-radius: 6px;
            }
            QTabBar::tab:selected {
                background: #3498db;
                color: white;
                font-weight: bold;
            }
            QTabBar::tab:hover:!selected {
                background: #d5dbdb;
            }
        """)
        
        # –ü–µ—Ä–≤—ã–π —Ç–∞–± - –í—Ö–æ–¥–Ω—ã–µ/–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        self.createInputOutputTab()
        
        # –í—Ç–æ—Ä–æ–π —Ç–∞–± - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏
        self.createProcessingTab()
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–æ–≤
        self.settings_tabs.addTab(self.io_tab_widget, "üì•üì§ –í—Ö–æ–¥–Ω—ã–µ/–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        self.settings_tabs.addTab(self.processing_tab_widget, "‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    
    def createInputOutputTab(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–∞ –≤—Ö–æ–¥–Ω—ã—Ö/–≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        self.io_tab_widget = QWidget()
        io_layout = QVBoxLayout(self.io_tab_widget)
        io_layout.setContentsMargins(20, 20, 20, 20)  # –£–≤–µ–ª–∏—á–µ–Ω—ã –æ—Ç—Å—Ç—É–ø—ã
        io_layout.setSpacing(20)  # –£–≤–µ–ª–∏—á–µ–Ω–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–æ–≤
        self.mode_widget = ConversionModeWidget()
        self.input_widget = InputDataWidget()
        self.output_widget = OutputDataWidget()
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –º–∞–∫–µ—Ç
        io_layout.addWidget(self.mode_widget)
        io_layout.addWidget(self.input_widget)
        io_layout.addWidget(self.output_widget)
        io_layout.addStretch()
    
    def createProcessingTab(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
        self.processing_tab_widget = QWidget()
        processing_layout = QVBoxLayout(self.processing_tab_widget)
        processing_layout.setContentsMargins(20, 20, 20, 20)  # –£–≤–µ–ª–∏—á–µ–Ω—ã –æ—Ç—Å—Ç—É–ø—ã
        processing_layout.setSpacing(20)  # –£–≤–µ–ª–∏—á–µ–Ω–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        self.processing_widget = ProcessingOptionsWidget()
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –º–∞–∫–µ—Ç
        processing_layout.addWidget(self.processing_widget)
        processing_layout.addStretch()
    
    def createResultsArea(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ–±–ª–∞—Å—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
        self.results_area = QWidget()
        results_layout = QVBoxLayout(self.results_area)
        results_layout.setContentsMargins(15, 15, 15, 15)  # –£–≤–µ–ª–∏—á–µ–Ω—ã –æ—Ç—Å—Ç—É–ø—ã
        results_layout.setSpacing(15)  # –£–≤–µ–ª–∏—á–µ–Ω–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        self.createProgressSection()
        
        # –¢–∞–±—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        self.createResultsTabs()
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –º–∞–∫–µ—Ç
        results_layout.addWidget(self.progress_frame)
        results_layout.addWidget(self.results_tabs, 1)
    
    def createProgressSection(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ü–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
        self.progress_frame = QFrame()
        progress_layout = QVBoxLayout(self.progress_frame)
        progress_layout.setContentsMargins(0, 0, 0, 0)
        
        # –ú–µ—Ç–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        self.progress_label = QLabel("üìä –ü—Ä–æ–≥—Ä–µ—Å—Å")
        self.progress_label.setStyleSheet("font-weight: bold; color: #2c3e50;")
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
        self.progress_bar = ModernProgressBar()
        self.progress_bar.setVisible(False)
        
        progress_layout.addWidget(self.progress_label)
        progress_layout.addWidget(self.progress_bar)
    
    def createResultsTabs(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
        self.results_tabs = QTabWidget()
        self.results_tabs.setStyleSheet("""
            QTabWidget::pane {
                border: 2px solid #bdc3c7;
                border-radius: 8px;
                background-color: white;
            }
            QTabBar::tab {
                background: #ecf0f1;
                border: 1px solid #bdc3c7;
                padding: 6px 12px;
                margin-right: 2px;
                border-top-left-radius: 6px;
                border-top-right-radius: 6px;
            }
            QTabBar::tab:selected {
                background: white;
                border-bottom-color: white;
                font-weight: bold;
            }
        """)
        
        # –¢–∞–± –ª–æ–≥–æ–≤
        self.log_text = LogTextWidget()
        
        # –¢–∞–± —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        self.results_table = ResultsTableWidget()
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–æ–≤
        self.results_tabs.addTab(self.log_text, "üìã –õ–æ–≥–∏")
        self.results_tabs.addTab(self.results_table, "üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã")
    
    def connectSignals(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ –∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        self.header.language_combo.currentIndexChanged.connect(self.handlers.onLanguageChanged)
        self.header.donation_button.clicked.connect(self.handlers.showDonation)
        self.header.author_button.clicked.connect(self.handlers.showAuthorInfo)
        
        # –†–µ–∂–∏–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
        self.mode_widget.single_mode.toggled.connect(self.handlers.onModeChanged)
        self.mode_widget.batch_mode.toggled.connect(self.handlers.onModeChanged)
        
        # –í—ã–±–æ—Ä —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫
        self.input_widget.input_file_button.clicked.connect(self.handlers.selectInputFile)
        self.input_widget.input_folder_button.clicked.connect(self.handlers.selectInputFolder)
        self.output_widget.output_folder_button.clicked.connect(self.handlers.selectOutputFolder)
        
        # –ü—Ä–∏–º–µ—Ä—ã CRS
        self.processing_widget.examples_button.clicked.connect(self.handlers.showCrsExamples)
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.control_buttons.convert_button.clicked.connect(self.handlers.startConversion)
        self.control_buttons.cancel_button.clicked.connect(self.handlers.cancelConversion)
        self.control_buttons.clear_log_button.clicked.connect(self.handlers.clearLogs)
    
    def applyStyles(self):
        """–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Å—Ç–∏–ª–µ–π"""
        self.setStyleSheet(apply_global_styles())
    
    def updateLanguage(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        from ..translation_manager import translations
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ–∫–Ω–∞
        self.setWindowTitle(f"üéØ {translations.get_text('window_title')}")
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        self.settings_tabs.setTabText(0, f"üì•üì§ {translations.get_text('input_output')}")
        self.settings_tabs.setTabText(1, f"‚öôÔ∏è {translations.get_text('processing_options')}")
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø —Ä–µ–∂–∏–º–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
        self.mode_widget.mode_group_box.setTitle(f"üîÑ {translations.get_text('conversion_mode')}")
        self.mode_widget.single_mode.setText(f"üìÑ {translations.get_text('single_file')}")
        self.mode_widget.batch_mode.setText(f"üìÅ {translations.get_text('batch_processing')}")
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        self.input_widget.input_group.setTitle(f"üì• {translations.get_text('input_file')}")
        self.input_widget.input_file_line.setPlaceholderText(translations.get_text('select_input_file'))
        self.input_widget.input_folder_line.setPlaceholderText(translations.get_text('select_input_folder'))
        self.input_widget.input_file_button.setText(f"üìÇ {translations.get_text('browse')}")
        self.input_widget.input_folder_button.setText(f"üìÇ {translations.get_text('browse')}")
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        self.output_widget.output_group.setTitle(f"üì§ {translations.get_text('output_folder')}")
        self.output_widget.output_folder_line.setPlaceholderText(translations.get_text('select_output_folder'))
        self.output_widget.output_folder_button.setText(f"üìÇ {translations.get_text('browse')}")
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        self.processing_widget.threading_group.setTitle(f"‚ö° {translations.get_text('threading_settings')}")
        self.processing_widget.thread_count_label.setText(f"üßµ {translations.get_text('thread_count')}")
        
        self.processing_widget.crs_group.setTitle(f"üåç {translations.get_text('coordinate_system')}")
        self.processing_widget.crs_hint_label.setText(f"üìù {translations.get_text('crs_format_hint')}")
        self.processing_widget.add_to_project_cb.setText(f"‚úÖ {translations.get_text('add_to_project')}")
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        self.progress_label.setText(f"üìä {translations.get_text('progress')}")
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        self.results_tabs.setTabText(0, f"üìã {translations.get_text('logs')}")
        self.results_tabs.setTabText(1, f"üìà {translations.get_text('results')}")
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ç–∞–±–ª–∏—Ü—ã
        self.results_table.setHorizontalHeaderLabels([
            f"üìÑ {translations.get_text('file')}",
            f"üìä {translations.get_text('status')}",
            f"üí¨ {translations.get_text('message')}"
        ])
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        if 'Converting' in self.control_buttons.convert_button.text() or '–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è' in self.control_buttons.convert_button.text():
            self.control_buttons.convert_button.setText(f"‚è≥ {translations.get_text('converting')}")
        else:
            self.control_buttons.convert_button.setText(f"üöÄ {translations.get_text('start_conversion')}")
            
        self.control_buttons.cancel_button.setText(f"‚ùå {translations.get_text('cancel')}")
        self.control_buttons.clear_log_button.setText(f"üßπ {translations.get_text('clear_logs')}")
    
    def log_message(self, message):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª–æ–≥ —Å —Ü–≤–µ—Ç–æ–≤–æ–π —Ä–∞—Å–∫—Ä–∞—Å–∫–æ–π"""
        timestamp = datetime.now().strftime('%H:%M:%S')
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        if message.startswith('üöÄ') or message.startswith('üéâ'):
            color = '#2ecc71'  # –ó–µ–ª–µ–Ω—ã–π –¥–ª—è —É—Å–ø–µ—Ö–∞
        elif message.startswith('‚ö†Ô∏è'):
            color = '#f39c12'  # –û—Ä–∞–Ω–∂–µ–≤—ã–π –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
        elif message.startswith('üî•') or message.startswith('‚ùå'):
            color = '#e74c3c'  # –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è –æ—à–∏–±–æ–∫
        elif message.startswith('‚úÖ'):
            color = '#27ae60'  # –¢–µ–º–Ω–æ-–∑–µ–ª–µ–Ω—ã–π –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        elif message.startswith('‚úó'):
            color = '#c0392b'  # –¢–µ–º–Ω–æ-–∫—Ä–∞—Å–Ω—ã–π –¥–ª—è –æ—à–∏–±–æ–∫ —Ñ–∞–π–ª–æ–≤
        elif message.startswith('üìä') or message.startswith('üìÅ'):
            color = '#3498db'  # –°–∏–Ω–∏–π –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        else:
            color = '#ecf0f1'  # –ë–µ–ª—ã–π –¥–ª—è –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        
        formatted_message = f'<span style="color: #95a5a6;">[{timestamp}]</span> <span style="color: {color};">{message}</span>'
        self.log_text.append(formatted_message)
        
        # –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –∫–æ–Ω—Ü—É
        cursor = self.log_text.textCursor()
        cursor.movePosition(cursor.End)
        self.log_text.setTextCursor(cursor)
    
    def closeEvent(self, event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞"""
        self.handlers.closeEvent(event)
