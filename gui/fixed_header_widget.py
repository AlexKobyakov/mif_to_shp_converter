# -*- coding: utf-8 -*-
"""
Fixed Header Widget with working language dropdown
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∏–¥–∂–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å —Ä–∞–±–æ—Ç–∞—é—â–∏–º –≤—ã–ø–∞–¥–∞—é—â–∏–º —Å–ø–∏—Å–∫–æ–º —è–∑—ã–∫–æ–≤

Author: –ö–æ–±—è–∫–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á (Alex Kobyakov)
Email: kobyakov@lesburo.ru
Year: 2025
"""

from qgis.PyQt.QtCore import Qt
from qgis.PyQt.QtWidgets import QWidget, QHBoxLayout, QLabel, QComboBox, QFrame
from qgis.PyQt.QtGui import QPalette, QColor

from .gui_components import ModernButton


class FixedHeaderWidget(QFrame):
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∏–¥–∂–µ—Ç –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å —Ä–∞–±–æ—Ç–∞—é—â–∏–º dropdown"""
    
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setFixedHeight(90)
        self.setStyleSheet("""
            QFrame {
                background: qlineargradient(x1:0, y1:0, x2:1, y2:0,
                                            stop:0 #3498db, stop:1 #2ecc71);
                border-radius: 10px;
                margin: 5px;
            }
        """)
        self.setupUi()
    
    def setupUi(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
        main_layout = QHBoxLayout(self)
        main_layout.setContentsMargins(20, 15, 20, 15)
        main_layout.setSpacing(20)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        self.title_label = QLabel("üéØ MIF/TAB to SHP/GeoJSON Converter v2.3")
        self.title_label.setStyleSheet("""
            QLabel {
                color: white;
                font-size: 18px;
                font-weight: bold;
                background: transparent;
            }
        """)
        
        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.controls_widget = QWidget()
        controls_layout = QHBoxLayout(self.controls_widget)
        controls_layout.setContentsMargins(0, 0, 0, 0)
        controls_layout.setSpacing(15)
        
        # –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.createLanguageSelector(controls_layout)
        self.createDonationButton(controls_layout)
        self.createAuthorButton(controls_layout)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –≥–ª–∞–≤–Ω—ã–π –º–∞–∫–µ—Ç
        main_layout.addWidget(self.title_label)
        main_layout.addStretch()
        main_layout.addWidget(self.controls_widget)
    
    def createLanguageSelector(self, layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ —è–∑—ã–∫–∞ —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏"""
        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä
        lang_container = QWidget()
        lang_layout = QHBoxLayout(lang_container)
        lang_layout.setContentsMargins(0, 0, 0, 0)
        lang_layout.setSpacing(8)
        
        # –ò–∫–æ–Ω–∫–∞
        lang_icon = QLabel("üåê")
        lang_icon.setStyleSheet("""
            QLabel {
                color: white;
                font-size: 16px;
                background: transparent;
                min-width: 20px;
                min-height: 20px;
            }
        """)
        
        # –ö–æ–º–±–æ–±–æ–∫—Å —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        self.language_combo = QComboBox()
        self.language_combo.setFixedSize(140, 32)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
        self.language_combo.addItems([
            "üá∑üá∫ –†—É—Å—Å–∫–∏–π", "üá∫üá∏ English", "üá®üá≥ ‰∏≠Êñá", "üáÆüá≥ ‡§π‡§ø‡§Ç‡§¶‡•Ä", 
            "üá™üá∏ Espa√±ol", "üá∏üá¶ ÿßŸÑÿπÿ±ÿ®Ÿäÿ©", "üá´üá∑ Fran√ßais", 
            "üáßüá∑ Portugu√™s", "üá©üá™ Deutsch"
        ])
        
        # –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞–ª–∏—Ç—Ä—ã
        self.forceDropdownColors()
        
        # –ü—Ä–æ—Å—Ç—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Å–∞–º–æ–≥–æ –∫–æ–º–±–æ–±–æ–∫—Å–∞
        self.language_combo.setStyleSheet("""
            QComboBox {
                background: rgba(255, 255, 255, 0.2);
                color: white;
                border: 2px solid rgba(255, 255, 255, 0.3);
                border-radius: 6px;
                padding: 6px 12px;
                font-weight: bold;
                font-size: 11px;
            }
            QComboBox:hover {
                background: rgba(255, 255, 255, 0.3);
                border-color: rgba(255, 255, 255, 0.5);
            }
            QComboBox::drop-down {
                border: none;
                width: 20px;
                background: transparent;
            }
            QComboBox::down-arrow {
                color: white;
                width: 12px;
                height: 12px;
            }
        """)
        
        lang_layout.addWidget(lang_icon)
        lang_layout.addWidget(self.language_combo)
        layout.addWidget(lang_container)
    
    def forceDropdownColors(self):
        """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–≤–µ—Ç–æ–≤ dropdown"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º view (–≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫)
            view = self.language_combo.view()
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø–∞–ª–∏—Ç—Ä—É —Å —è–≤–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏
            palette = QPalette()
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ü–≤–µ—Ç–∞
            palette.setColor(QPalette.Base, QColor(255, 255, 255))           # –ë–µ–ª—ã–π —Ñ–æ–Ω
            palette.setColor(QPalette.Text, QColor(0, 0, 0))                 # –ß–µ—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç
            palette.setColor(QPalette.Window, QColor(255, 255, 255))         # –ë–µ–ª–æ–µ –æ–∫–Ω–æ
            palette.setColor(QPalette.WindowText, QColor(0, 0, 0))           # –ß–µ—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç –æ–∫–Ω–∞
            palette.setColor(QPalette.Button, QColor(255, 255, 255))         # –ë–µ–ª–∞—è –∫–Ω–æ–ø–∫–∞
            palette.setColor(QPalette.ButtonText, QColor(0, 0, 0))           # –ß–µ—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
            palette.setColor(QPalette.Highlight, QColor(52, 152, 219))       # –°–∏–Ω—è—è –ø–æ–¥—Å–≤–µ—Ç–∫–∞
            palette.setColor(QPalette.HighlightedText, QColor(255, 255, 255)) # –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç –ø–æ–¥—Å–≤–µ—Ç–∫–∏
            palette.setColor(QPalette.AlternateBase, QColor(248, 249, 250))  # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ñ–æ–Ω
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–∞–ª–∏—Ç—Ä—É –∫ –∫–æ–º–±–æ–±–æ–∫—Å—É –∏ view
            self.language_combo.setPalette(palette)
            view.setPalette(palette)
            
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è view
            view.setStyleSheet("""
                QListView {
                    background-color: white !important;
                    color: black !important;
                    border: 2px solid #bdc3c7;
                    border-radius: 4px;
                    outline: none;
                    font-size: 11px;
                    font-weight: bold;
                    padding: 2px;
                }
                QListView::item {
                    padding: 8px 12px;
                    color: black !important;
                    background-color: white !important;
                    border: none;
                    min-height: 24px;
                }
                QListView::item:selected {
                    background-color: #3498db !important;
                    color: white !important;
                }
                QListView::item:hover {
                    background-color: #5dade2 !important;
                    color: white !important;
                }
            """)
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–µ—Ä–µ–∑ Qt properties
            view.setProperty("color", "black")
            view.setProperty("background-color", "white")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            view.update()
            self.language_combo.update()
            
        except Exception as e:
            print(f"Warning: Could not force dropdown colors: {e}")
    
    def createDonationButton(self, layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
        from ..translation_manager import translations
        
        self.donation_button = ModernButton(f"‚òï {translations.get_text('header_support')}")
        self.donation_button.setFixedSize(120, 32)
        self.donation_button.setToolTip("‚ù§Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –ø–ª–∞–≥–∏–Ω–∞!")
        self.donation_button.setStyleSheet("""
            QPushButton {
                background: qlineargradient(x1:0, y1:0, x2:0, y2:1,
                                            stop:0 rgba(244, 93, 34, 0.9), 
                                            stop:1 rgba(230, 81, 0, 0.9));
                color: white;
                border: 2px solid rgba(255, 255, 255, 0.3);
                border-radius: 8px;
                font-weight: bold;
                font-size: 11px;
                padding: 6px 12px;
            }
            QPushButton:hover {
                background: qlineargradient(x1:0, y1:0, x2:0, y2:1,
                                            stop:0 rgba(244, 93, 34, 1.0), 
                                            stop:1 rgba(230, 81, 0, 1.0));
                border-color: rgba(255, 255, 255, 0.5);
                transform: translateY(-1px);
            }
            QPushButton:pressed {
                transform: translateY(1px);
            }
        """)
        layout.addWidget(self.donation_button)
    
    def createAuthorButton(self, layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∞–≤—Ç–æ—Ä–∞"""
        from ..translation_manager import translations
        
        self.author_button = ModernButton(f"üë§ {translations.get_text('header_about_author')}")
        self.author_button.setFixedSize(100, 32)
        self.author_button.setToolTip("üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ—Ä–µ –ø–ª–∞–≥–∏–Ω–∞")
        self.author_button.setStyleSheet("""
            QPushButton {
                background: rgba(255, 255, 255, 0.2);
                color: white;
                border: 2px solid rgba(255, 255, 255, 0.3);
                border-radius: 8px;
                font-weight: bold;
                font-size: 11px;
                padding: 6px 12px;
            }
            QPushButton:hover {
                background: rgba(255, 255, 255, 0.3);
                border-color: rgba(255, 255, 255, 0.5);
                transform: translateY(-1px);
            }
            QPushButton:pressed {
                transform: translateY(1px);
            }
        """)
        layout.addWidget(self.author_button)
